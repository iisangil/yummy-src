{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sangillee/Documents/coding/yummy/src/Messages.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PubNub from 'pubnub';\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.client.addListener({\n      message: function (msg) {\n        let info = {\n          \"sender\": msg.publisher,\n          \"message\": msg.message\n        };\n        let {\n          messages\n        } = this.state;\n        messages.unshift(info);\n        this.setState({\n          messages\n        });\n      }\n    });\n  }\n\n  inputMessage(e) {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.submitMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.message,\n        onChange: this.inputMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nMessages.propTypes = {\n  client: PropTypes.any.isRequired,\n  channel: PropTypes.string.isRequired\n};\nexport default Messages;","map":{"version":3,"sources":["/Users/sangillee/Documents/coding/yummy/src/Messages.jsx"],"names":["React","PropTypes","PubNub","Messages","Component","constructor","props","state","messages","message","componentDidMount","client","addListener","msg","info","publisher","unshift","setState","inputMessage","e","target","value","render","submitMessage","propTypes","any","isRequired","channel","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWK,MAAX,CAAkBC,WAAlB,CAA8B;AAC1BH,MAAAA,OAAO,EAAE,UAASI,GAAT,EAAc;AACnB,YAAIC,IAAI,GAAG;AACP,oBAAUD,GAAG,CAACE,SADP;AAEP,qBAAWF,GAAG,CAACJ;AAFR,SAAX;AAIA,YAAI;AAAED,UAAAA;AAAF,YAAe,KAAKD,KAAxB;AACAC,QAAAA,QAAQ,CAACQ,OAAT,CAAiBF,IAAjB;AACA,aAAKG,QAAL,CAAc;AACVT,UAAAA;AADU,SAAd;AAGH;AAXyB,KAA9B;AAaH;;AAEDU,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,SAAKF,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAEU,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,aAArB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,OAArC;AAA8C,QAAA,QAAQ,EAAE,KAAKS;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvCkC;;AA0CvCf,QAAQ,CAACqB,SAAT,GAAqB;AACjBb,EAAAA,MAAM,EAAEV,SAAS,CAACwB,GAAV,CAAcC,UADL;AAEjBC,EAAAA,OAAO,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBF;AAFT,CAArB;AAKA,eAAevB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PubNub from 'pubnub';\n\nclass Messages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messages: [],\n            message: '',\n        }\n    }\n\n    componentDidMount() {\n        this.props.client.addListener({\n            message: function(msg) {\n                let info = {\n                    \"sender\": msg.publisher,\n                    \"message\": msg.message,\n                }\n                let { messages } = this.state;\n                messages.unshift(info);\n                this.setState({\n                    messages,\n                })\n            }\n        })\n    }\n\n    inputMessage(e) {\n        this.setState({\n            message: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitMessage}>\n              <input type=\"text\" value={this.state.message} onChange={this.inputMessage}></input>\n              <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        )\n    }\n}\n\nMessages.propTypes = {\n    client: PropTypes.any.isRequired,\n    channel: PropTypes.string.isRequired,\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}