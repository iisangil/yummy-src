{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sangillee/Documents/coding/yummy/src/App.jsx\";\n// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react';\nimport Messages from './Messages';\nimport { nanoid } from 'nanoid';\nimport PubNub from 'pubnub';\n\nconst pubNubConfig = require('./pubnub.config.json');\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      groupID: '',\n      channel: '',\n      inGroup: false,\n      joining: false,\n      code: '',\n      message: ''\n    };\n    this.createGroup = this.createGroup.bind(this);\n    this.joinGroup = this.joinGroup.bind(this);\n    this.inputCode = this.inputCode.bind(this);\n    this.submitCode = this.submitCode.bind(this);\n    this.leaveGroup = this.leaveGroup.bind(this);\n    this.inputMessage = this.inputMessage.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  createGroup() {\n    this.pubNubClient = new PubNub(pubNubConfig.keySet);\n    let groupID = nanoid(6);\n    let channel = 'yummy--' + groupID;\n    this.pubNubClient.subscribe({\n      channels: [channel],\n      withPresence: true\n    });\n    alert(\"Share this group code with your friends: \" + groupID);\n    this.setState({\n      groupID,\n      channel,\n      inGroup: true\n    });\n  }\n\n  joinGroup() {\n    this.setState({\n      joining: true\n    });\n  }\n\n  inputCode(e) {\n    this.setState({\n      code: e.target.value\n    });\n  }\n\n  submitCode(e) {\n    e.preventDefault();\n    this.pubNubClient = new PubNub(pubNubConfig.keySet);\n    let groupID = this.state.code;\n    console.log(groupID);\n    let channel = 'yummy--' + groupID;\n    this.pubNubClient.subscribe({\n      channels: [channel],\n      withPresence: true\n    });\n    this.setState({\n      groupID,\n      channel,\n      inGroup: true,\n      code: ''\n    });\n  }\n\n  leaveGroup() {\n    this.pubNubClient.unsubscribe({\n      channels: [this.state.channel]\n    });\n    this.setState({\n      inGroup: false,\n      joining: false,\n      channel: ''\n    });\n  }\n\n  inputMessage(e) {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Yummy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), !this.state.inGroup && !this.state.joining && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.createGroup,\n          children: \"Create a Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.joinGroup,\n          children: \"Join a Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), !this.state.inGroup && this.state.joining && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitCode,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Group Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.code,\n              onChange: this.inputCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), this.state.inGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.message,\n            onChange: this.inputMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.leaveGroup,\n          children: \"Leave Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sangillee/Documents/coding/yummy/src/App.jsx"],"names":["React","Messages","nanoid","PubNub","pubNubConfig","require","App","Component","constructor","state","messages","groupID","channel","inGroup","joining","code","message","createGroup","bind","joinGroup","inputCode","submitCode","leaveGroup","inputMessage","submitMessage","pubNubClient","keySet","subscribe","channels","withPresence","alert","setState","e","target","value","preventDefault","console","log","unsubscribe","render"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react';\nimport Messages from './Messages'\nimport { nanoid } from 'nanoid';\nimport PubNub from 'pubnub';\n\nconst pubNubConfig = require('./pubnub.config.json');\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      messages: [],\n      groupID: '',\n      channel: '',\n      inGroup: false,\n      joining: false,\n      code: '',\n      message: '',\n    }\n    this.createGroup = this.createGroup.bind(this);\n    this.joinGroup = this.joinGroup.bind(this);\n    this.inputCode = this.inputCode.bind(this);\n    this.submitCode = this.submitCode.bind(this);\n    this.leaveGroup = this.leaveGroup.bind(this);\n    this.inputMessage = this.inputMessage.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  createGroup() {\n    this.pubNubClient = new PubNub(pubNubConfig.keySet);\n\n    let groupID = nanoid(6);\n    let channel = 'yummy--' + groupID;\n\n    this.pubNubClient.subscribe({\n      channels: [channel],\n      withPresence: true,\n    });\n\n    alert(\"Share this group code with your friends: \" + groupID);\n\n    this.setState({\n      groupID,\n      channel,\n      inGroup: true,\n    });\n  }\n\n  joinGroup() {\n    this.setState({\n      joining: true,\n    });\n  }\n\n  inputCode(e) {\n    this.setState({\n      code: e.target.value,\n    });\n  }\n\n  submitCode(e) {\n    e.preventDefault();\n\n    this.pubNubClient = new PubNub(pubNubConfig.keySet);\n\n    let groupID = this.state.code;\n    console.log(groupID);\n    let channel = 'yummy--' + groupID;\n\n    this.pubNubClient.subscribe({\n      channels: [channel],\n      withPresence: true,\n    });\n\n    this.setState({\n      groupID,\n      channel,\n      inGroup: true,\n      code: '',\n    });\n  }\n\n  leaveGroup() {\n    this.pubNubClient.unsubscribe({\n      channels: [this.state.channel],\n    });\n\n    this.setState({\n      inGroup: false,\n      joining: false,\n      channel: '',\n    })\n  }\n\n  inputMessage(e) {\n    this.setState({\n      message: e.target.value,\n    })\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <p>\n            Yummy\n          </p>\n        </header>\n        {\n          !this.state.inGroup && !this.state.joining &&\n          <div>\n            <button onClick={this.createGroup}>\n              Create a Group\n            </button>\n            <button onClick={this.joinGroup}>\n              Join a Group\n            </button>\n          </div>\n        }\n        {\n          !this.state.inGroup && this.state.joining &&\n          <div>\n            <form onSubmit={this.submitCode}>\n              <label>\n                Group Code:\n                <input type=\"text\" value={this.state.code} onChange={this.inputCode}></input>\n              </label>\n              <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n          </div>\n        }\n        {\n          this.state.inGroup &&\n          <div>\n            <form onSubmit={this.submitMessage}>\n              <input type=\"text\" value={this.state.message} onChange={this.inputMessage}></input>\n              <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n            <button onClick={this.leaveGroup}>\n              Leave Group\n            </button>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}