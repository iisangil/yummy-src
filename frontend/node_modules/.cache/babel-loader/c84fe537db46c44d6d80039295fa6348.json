{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sangillee/Documents/coding/yummy/src/Messages.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      message: ''\n    };\n    this.inputMessage = this.inputMessage.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.props.client.addListener({\n      message: function (msg) {\n        let info = {\n          \"sender\": msg.publisher,\n          \"message\": msg.message\n        };\n        let {\n          messages\n        } = this.state;\n        messages.concat(info);\n        this.setState({\n          messages\n        });\n        console.log(msg);\n      }\n    });\n  }\n\n  inputMessage(e) {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n    let {\n      message\n    } = this.state;\n    let {\n      channel\n    } = this.props;\n    this.props.client.publish({\n      message: message,\n      channel: channel\n    }, function (status, response) {\n      if (status.error) {\n        console.log(status);\n        alert(\"Could not send message. Please try again.\");\n      } else {\n        console.log(\"message published with timetoken\", response.timetoken);\n      }\n    });\n    this.setState({\n      message: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.submitMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.message,\n        onChange: this.inputMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nMessages.propTypes = {\n  client: PropTypes.any.isRequired,\n  channel: PropTypes.string.isRequired\n};\nexport default Messages;","map":{"version":3,"sources":["/Users/sangillee/Documents/coding/yummy/src/Messages.jsx"],"names":["React","PropTypes","Messages","Component","constructor","props","state","messages","message","inputMessage","bind","submitMessage","componentDidUpdate","client","addListener","msg","info","publisher","concat","setState","console","log","e","target","value","preventDefault","channel","publish","status","response","error","alert","timetoken","render","propTypes","any","isRequired","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,SAAKP,KAAL,CAAWQ,MAAX,CAAkBC,WAAlB,CAA8B;AAC1BN,MAAAA,OAAO,EAAE,UAASO,GAAT,EAAc;AACnB,YAAIC,IAAI,GAAG;AACP,oBAAUD,GAAG,CAACE,SADP;AAEP,qBAAWF,GAAG,CAACP;AAFR,SAAX;AAIA,YAAI;AAAED,UAAAA;AAAF,YAAe,KAAKD,KAAxB;AACAC,QAAAA,QAAQ,CAACW,MAAT,CAAgBF,IAAhB;AACA,aAAKG,QAAL,CAAc;AACVZ,UAAAA;AADU,SAAd;AAGAa,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH;AAZyB,KAA9B;AAcH;;AAEDN,EAAAA,YAAY,CAACa,CAAD,EAAI;AACZ,SAAKH,QAAL,CAAc;AACVX,MAAAA,OAAO,EAAEc,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGH;;AAEDb,EAAAA,aAAa,CAACW,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACG,cAAF;AAEA,QAAI;AAAEjB,MAAAA;AAAF,QAAc,KAAKF,KAAvB;AACA,QAAI;AAAEoB,MAAAA;AAAF,QAAc,KAAKrB,KAAvB;AAEA,SAAKA,KAAL,CAAWQ,MAAX,CAAkBc,OAAlB,CACI;AACInB,MAAAA,OAAO,EAAEA,OADb;AAEIkB,MAAAA,OAAO,EAAEA;AAFb,KADJ,EAKI,UAAUE,MAAV,EAAkBC,QAAlB,EAA4B;AACxB,UAAID,MAAM,CAACE,KAAX,EAAkB;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACAG,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACH,OAHD,MAGO;AACHX,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDQ,QAAQ,CAACG,SAAzD;AACH;AACJ,KAZL;AAeA,SAAKb,QAAL,CAAc;AACVX,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH;;AAEDyB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKtB,aAArB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,OAArC;AAA8C,QAAA,QAAQ,EAAE,KAAKC;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApEkC;;AAuEvCP,QAAQ,CAACgC,SAAT,GAAqB;AACjBrB,EAAAA,MAAM,EAAEZ,SAAS,CAACkC,GAAV,CAAcC,UADL;AAEjBV,EAAAA,OAAO,EAAEzB,SAAS,CAACoC,MAAV,CAAiBD;AAFT,CAArB;AAKA,eAAelC,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Messages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messages: [],\n            message: '',\n        }\n        this.inputMessage = this.inputMessage.bind(this);\n        this.submitMessage = this.submitMessage.bind(this);\n    }\n\n    componentDidUpdate() {\n        this.props.client.addListener({\n            message: function(msg) {\n                let info = {\n                    \"sender\": msg.publisher,\n                    \"message\": msg.message,\n                }\n                let { messages } = this.state;\n                messages.concat(info);\n                this.setState({\n                    messages,\n                });\n                console.log(msg);\n            }\n        })\n    }\n\n    inputMessage(e) {\n        this.setState({\n            message: e.target.value,\n        });\n    }\n\n    submitMessage(e) {\n        e.preventDefault();\n\n        let { message } = this.state;\n        let { channel } = this.props;\n\n        this.props.client.publish(\n            {\n                message: message,\n                channel: channel,\n            },\n            function (status, response) {\n                if (status.error) {\n                    console.log(status);\n                    alert(\"Could not send message. Please try again.\");\n                } else {\n                    console.log(\"message published with timetoken\", response.timetoken);\n                }\n            }\n        );\n\n        this.setState({\n            message: '',\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitMessage}>\n              <input type=\"text\" value={this.state.message} onChange={this.inputMessage}></input>\n              <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        )\n    }\n}\n\nMessages.propTypes = {\n    client: PropTypes.any.isRequired,\n    channel: PropTypes.string.isRequired,\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}